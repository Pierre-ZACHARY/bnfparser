<?xml version="1.0" encoding="utf-8" ?>
<!-- File auto-generated by Bullwinkle -->
<parsetree>
    <module>
        <declaration>
            <process-declaration>
                <token>
                    process
                </token>
                <declaration-name>
                    <token>
                        Main
                    </token>
                </declaration-name>
                <token>
                    (
                </token>
                    <function-parameters-declaration*>
                        <token>

                        </token>
                    </function-parameters-declaration*>
                <token>
                    )
                </token>
            <block-statement>
                <token>
                    {
                </token>
                <statement*>
                <statement>
                    <token>
                        signal
                    </token>
                    <defined-by-user-variable>
                        <token>
                            s1
                        </token>
                    </defined-by-user-variable>
                </statement>
                <token>
                    ;
                </token>
                <statement+>
                <statement>
                    <token>
                        signal
                    </token>
                    <defined-by-user-variable>
                        <token>
                            s2
                        </token>
                    </defined-by-user-variable>
                </statement>
                <token>
                    ;
                </token>
                <statement+>
                <statement-ending-with-block-statement>
                    <block-statement>
                        <parallel-block-statement>
                            <token>
                                {
                            </token>
                            <parallel-block-content+>
                            <statement+>
                            <statement>
                                <function-call>
                                    <variable-access>
                                        <defined-by-user-variable>
                                            <token>
                                                print_string
                                            </token>
                                        </defined-by-user-variable>
                                    </variable-access>
                                    <token>
                                        (
                                    </token>
                                    <function-parameters*>
                                    <attribution>
                                        <expression>
                                            <string>
                                                <token>
                                                    "P1a\n"
                                                </token>
                                            </string>
                                        </expression>
                                    </attribution>
                                </function-parameters*>
                                <token>
                                    )
                                </token>
                            </function-call>
                        </statement>
                        <token>
                            ;
                        </token>
                        <statement+>
                        <statement-ending-with-block-statement>
                        <token>
                            when
                        </token>
                        <variable-access>
                            <defined-by-user-variable>
                                <token>
                                    s1
                                </token>
                            </defined-by-user-variable>
                        </variable-access>
                        <block-statement>
                            <token>
                                {
                            </token>
                            <statement*>
                            <token>

                            </token>
                        </statement*>
                        <token>
                            }
                        </token>
                    </block-statement>
                </statement-ending-with-block-statement>
                <statement*>
                <statement>
                    <function-call>
                        <variable-access>
                            <defined-by-user-variable>
                                <token>
                                    print_string
                                </token>
                            </defined-by-user-variable>
                        </variable-access>
                        <token>
                            (
                        </token>
                        <function-parameters*>
                        <attribution>
                            <expression>
                                <string>
                                    <token>
                                        "P1b\n"
                                    </token>
                                </string>
                            </expression>
                        </attribution>
                    </function-parameters*>
                    <token>
                        )
                    </token>
                </function-call>
            </statement>
            <token>
                ;
            </token>
            <statement+>
            <statement>
                <token>
                    emit
                </token>
                <variable-access>
                    <defined-by-user-variable>
                        <token>
                            s2
                        </token>
                    </defined-by-user-variable>
                </variable-access>
            </statement>
            <token>
                ;
            </token>
            <statement+>
            <statement-ending-with-block-statement>
                <token>
                    watching
                </token>
                <variable-access>
                    <defined-by-user-variable>
                        <token>
                            s1
                        </token>
                    </defined-by-user-variable>
                </variable-access>
                <block-statement>
                    <token>
                        {
                    </token>
                    <statement*>
                    <statement>
                        <token>
                            signal
                        </token>
                        <defined-by-user-variable>
                            <token>
                                s3
                            </token>
                        </defined-by-user-variable>
                    </statement>
                    <token>
                        ;
                    </token>
                    <statement+>
                    <statement-ending-with-block-statement>
                    <token>
                        when
                    </token>
                    <variable-access>
                        <defined-by-user-variable>
                            <token>
                                s3
                            </token>
                        </defined-by-user-variable>
                    </variable-access>
                    <block-statement>
                        <token>
                            {
                        </token>
                        <statement*>
                        <token>

                        </token>
                    </statement*>
                    <token>
                        }
                    </token>
                </block-statement>
            </statement-ending-with-block-statement>
            <statement*>
            <token>

            </token>
        </statement*>
    </statement+>
</statement*>
<token>
}
</token>
        </block-statement>
        </statement-ending-with-block-statement>
<statement*>
<token>

</token>
        </statement*>
        </statement+>
        </statement+>
        </statement*>
        </statement+>
        </statement+>
<token>
||
</token>
<parallel-block-content*>
<token>

</token>
        </parallel-block-content*>
        </parallel-block-content+>
<statement+>
<statement>
<function-call>
    <variable-access>
        <defined-by-user-variable>
            <token>
                print_string
            </token>
        </defined-by-user-variable>
    </variable-access>
    <token>
        (
    </token>
    <function-parameters*>
    <attribution>
        <expression>
            <string>
                <token>
                    "P2a\n"
                </token>
            </string>
        </expression>
    </attribution>
</function-parameters*>
<token>
    )
</token>
</function-call>
        </statement>
<token>
;
</token>
<statement+>
<statement>
<token>
    emit
</token>
<variable-access>
    <defined-by-user-variable>
        <token>
            s1
        </token>
    </defined-by-user-variable>
</variable-access>
</statement>
<token>
;
</token>
<statement+>
<statement-ending-with-block-statement>
<token>
    when
</token>
<variable-access>
    <defined-by-user-variable>
        <token>
            s2
        </token>
    </defined-by-user-variable>
</variable-access>
<block-statement>
    <token>
        {
    </token>
    <statement*>
    <token>

    </token>
</statement*>
<token>
    }
</token>
</block-statement>
        </statement-ending-with-block-statement>
<statement*>
<statement>
<function-call>
    <variable-access>
        <defined-by-user-variable>
            <token>
                print_string
            </token>
        </defined-by-user-variable>
    </variable-access>
    <token>
        (
    </token>
    <function-parameters*>
    <attribution>
        <expression>
            <string>
                <token>
                    "P2b\n"
                </token>
            </string>
        </expression>
    </attribution>
</function-parameters*>
<token>
    )
</token>
</function-call>
        </statement>
<token>
;
</token>
<statement+>
<statement>
<token>
    signal
</token>
<defined-by-user-variable>
    <token>
        s3
    </token>
</defined-by-user-variable>
</statement>
<token>
;
</token>
<statement+>
<statement-ending-with-block-statement>
<token>
    watching
</token>
<variable-access>
    <defined-by-user-variable>
        <token>
            s2
        </token>
    </defined-by-user-variable>
</variable-access>
<block-statement>
    <token>
        {
    </token>
    <statement*>
    <statement-ending-with-block-statement>
    <token>
        when
    </token>
    <variable-access>
        <defined-by-user-variable>
            <token>
                s3
            </token>
        </defined-by-user-variable>
    </variable-access>
    <block-statement>
        <token>
            {
        </token>
        <statement*>
        <token>

        </token>
    </statement*>
    <token>
        }
    </token>
</block-statement>
</statement-ending-with-block-statement>
<statement*>
<token>

</token>
        </statement*>
        </statement*>
<token>
}
</token>
        </block-statement>
        </statement-ending-with-block-statement>
<statement*>
<token>

</token>
        </statement*>
        </statement+>
        </statement+>
        </statement*>
        </statement+>
        </statement+>
        </statement+>
<token>
}
</token>
        </parallel-block-statement>
        </block-statement>
        </statement-ending-with-block-statement>
<statement*>
<token>

</token>
        </statement*>
        </statement+>
        </statement+>
        </statement*>
<token>
}
</token>
        </block-statement>
        </process-declaration>
        </declaration>
            <module>
                <token>

                </token>
            </module>
        </module>
</parsetree>